{"ast":null,"code":"var _jsxFileName = \"/Users/dhrocha/workspace/devPleno/daniel-resume/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nconst Index = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-5xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"Ol\\xE1, eu sou o Daniel\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.currentData), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.repos.map(repo => {\n    return __jsx(\"div\", {\n      key: repo.id,\n      className: \"rounded bg-gray-200 mx-8 my-4 p-4 hover:shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }, repo.full_name), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, \"Language: \", repo.language, \" / Stars: \", repo.stargazers_count), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, \"Fork: \", repo.fork));\n  })));\n}; // Renderiza props no server via NextJS\n\n\nexport async function getServerSideProps(context) {\n  const resRepos = await fetch(\"https://api.github.com/users/tuliofaria/repos?sort=updated\");\n  const originalRepos = await resRepos.json();\n  const dontShowRepos = [\"tuliofaria/acesso-bds-\"];\n\n  const isNotFork = repo => !repo.fork;\n\n  const dontShowFilter = repo => dontShowRepos.indexOf(repo.full_name) === -1;\n\n  const extractData = repo => ({\n    id: repo.id,\n    full_name: repo.full_name,\n    language: repo.language,\n    stargazers_count: repo.stargazers_count\n  });\n\n  const repos = originalRepos.filter(isNotFork).filter(dontShowFilter).map(extractData);\n  return {\n    props: {\n      currentData: new Date().toString(),\n      repos\n    }\n  };\n}\nexport default Index;\n/*\nsetInterval(function () {\n  console.log(\"waiting...\");\n  let ultimoLogin = document.getElementById(\"L_UltimoLogin_41948\").innerHTML;\n  let sec =\n    document.getElementById(\"L_ContDown_1_41948\").innerHTML +\n    document.getElementById(\"L_ContDown_2_41948\").innerHTML;\n\n  if (ultimoLogin !== \"henrybh\" && sec === \"02\") {\n    ExecutarLance(\"41948\");\n    console.log(\"lance\");\n  }\n}, 1000);\n*/","map":{"version":3,"sources":["/Users/dhrocha/workspace/devPleno/daniel-resume/pages/index.js"],"names":["React","Index","props","currentData","repos","map","repo","id","full_name","language","stargazers_count","fork","getServerSideProps","context","resRepos","fetch","originalRepos","json","dontShowRepos","isNotFork","dontShowFilter","indexOf","extractData","filter","Date","toString"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACC,WAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AACzB,WACE;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,SAAS,EAAC,gDAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,IAAI,CAACE,SAAhC,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaF,IAAI,CAACG,QADlB,gBACsCH,IAAI,CAACI,gBAD3C,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUJ,IAAI,CAACK,IAAf,CARF,CADF;AAYD,GAbA,CADH,CAHF,CADF;AAsBD,CAvBD,C,CAyBA;;;AACA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAD0B,CAA5B;AAGA,QAAMC,aAAa,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AAEA,QAAMC,aAAa,GAAG,CAAC,wBAAD,CAAtB;;AACA,QAAMC,SAAS,GAAIb,IAAD,IAAU,CAACA,IAAI,CAACK,IAAlC;;AACA,QAAMS,cAAc,GAAId,IAAD,IAAUY,aAAa,CAACG,OAAd,CAAsBf,IAAI,CAACE,SAA3B,MAA0C,CAAC,CAA5E;;AAEA,QAAMc,WAAW,GAAIhB,IAAD,KAAW;AAC7BC,IAAAA,EAAE,EAAED,IAAI,CAACC,EADoB;AAE7BC,IAAAA,SAAS,EAAEF,IAAI,CAACE,SAFa;AAG7BC,IAAAA,QAAQ,EAAEH,IAAI,CAACG,QAHc;AAI7BC,IAAAA,gBAAgB,EAAEJ,IAAI,CAACI;AAJM,GAAX,CAApB;;AAMA,QAAMN,KAAK,GAAGY,aAAa,CACxBO,MADW,CACJJ,SADI,EAEXI,MAFW,CAEJH,cAFI,EAGXf,GAHW,CAGPiB,WAHO,CAAd;AAKA,SAAO;AACLpB,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAE,IAAIqB,IAAJ,GAAWC,QAAX,EADR;AAELrB,MAAAA;AAFK;AADF,GAAP;AAMD;AACD,eAAeH,KAAf;AAEA","sourcesContent":["import React from \"react\";\n\nconst Index = (props) => {\n  return (\n    <div>\n      <h1 className=\"text-5xl\">Ol√°, eu sou o Daniel</h1>\n      <div>{props.currentData}</div>\n      <div>\n        {props.repos.map((repo) => {\n          return (\n            <div\n              key={repo.id}\n              className=\"rounded bg-gray-200 mx-8 my-4 p-4 hover:shadow\"\n            >\n              <h3 className=\"font-bold\">{repo.full_name}</h3>\n              <p>\n                Language: {repo.language} / Stars: {repo.stargazers_count}\n              </p>\n              <p>Fork: {repo.fork}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// Renderiza props no server via NextJS\nexport async function getServerSideProps(context) {\n  const resRepos = await fetch(\n    \"https://api.github.com/users/tuliofaria/repos?sort=updated\"\n  );\n  const originalRepos = await resRepos.json();\n\n  const dontShowRepos = [\"tuliofaria/acesso-bds-\"];\n  const isNotFork = (repo) => !repo.fork;\n  const dontShowFilter = (repo) => dontShowRepos.indexOf(repo.full_name) === -1;\n\n  const extractData = (repo) => ({\n    id: repo.id,\n    full_name: repo.full_name,\n    language: repo.language,\n    stargazers_count: repo.stargazers_count,\n  });\n  const repos = originalRepos\n    .filter(isNotFork)\n    .filter(dontShowFilter)\n    .map(extractData);\n\n  return {\n    props: {\n      currentData: new Date().toString(),\n      repos,\n    },\n  };\n}\nexport default Index;\n\n/*\nsetInterval(function () {\n  console.log(\"waiting...\");\n  let ultimoLogin = document.getElementById(\"L_UltimoLogin_41948\").innerHTML;\n  let sec =\n    document.getElementById(\"L_ContDown_1_41948\").innerHTML +\n    document.getElementById(\"L_ContDown_2_41948\").innerHTML;\n\n  if (ultimoLogin !== \"henrybh\" && sec === \"02\") {\n    ExecutarLance(\"41948\");\n    console.log(\"lance\");\n  }\n}, 1000);\n*/\n"]},"metadata":{},"sourceType":"module"}