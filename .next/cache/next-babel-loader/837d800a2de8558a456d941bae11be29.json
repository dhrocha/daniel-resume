{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/dhrocha/workspace/devPleno/daniel-resume/pages/index.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"Bem vindo!\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.currentData), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.repos.map(function (repo) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, repo.full_name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, \"Language: \", repo.language, \" / Stars: \", repo.stargazers_count), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, \"Fork: \", repo.fork));\n  })));\n}; // Renderiza props no server via NextJS\n\n\n_c = Index;\nexport var __N_SSP = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/dhrocha/workspace/devPleno/daniel-resume/pages/index.js"],"names":["React","Index","props","currentData","repos","map","repo","full_name","language","stargazers_count","fork"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACC,WAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAU;AACzB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,SAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaD,IAAI,CAACE,QADlB,gBACsCF,IAAI,CAACG,gBAD3C,CAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUH,IAAI,CAACI,IAAf,CALF,CADF;AASD,GAVA,CADH,CAHF,CADF;AAmBD,CApBD,C,CAsBA;;;KAtBMT,K;;AAuCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\n\nconst Index = (props) => {\n  return (\n    <div>\n      <h1>Bem vindo!</h1>\n      <div>{props.currentData}</div>\n      <div>\n        {props.repos.map((repo) => {\n          return (\n            <div>\n              <h3>{repo.full_name}</h3>\n              <p>\n                Language: {repo.language} / Stars: {repo.stargazers_count}\n              </p>\n              <p>Fork: {repo.fork}</p>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// Renderiza props no server via NextJS\nexport async function getServerSideProps(context) {\n  const resRepos = await fetch(\n    \"https://api.github.com/users/tuliofaria/repos?sort=updated\"\n  );\n  const originalRepos = await resRepos.json();\n\n  const isNotFork = (repo) => !repo.fork;\n\n  const repos = originalRepos.filter(isNotFork);\n  return {\n    props: {\n      currentData: new Date().toString(),\n      repos,\n    },\n  };\n}\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}